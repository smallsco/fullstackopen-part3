{"version":3,"sources":["components/Filter.js","components/Notification.js","components/PersonForm.js","components/Person.js","components/PersonList.js","services/persons.js","App.js","index.js"],"names":["Filter","onChange","Notification","type","message","className","PersonForm","props","newName","newNumber","onChangeName","onChangeNumber","onAdd","value","onClick","Person","name","number","onDelete","PersonList","persons","nameFilter","filteredPersons","filter","person","toLowerCase","includes","map","key","id","baseUrl","axios","get","then","response","data","newObject","post","delete","put","App","useState","setPersons","setNewName","setNewNumber","setNameFilter","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","useEffect","personService","event","target","preventDefault","newPerson","existingPerson","find","window","confirm","updatedPerson","setTimeout","catch","error","newPersonWithId","concat","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7807abb.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ onChange }) => (\n  <form>\n    <div>\n      Filter name with: <input onChange={onChange} />\n    </div>\n  </form>\n)\n\nexport default Filter","import React from 'react'\n\nconst Notification = ({ type, message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={type}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\n\nconst PersonForm = (props) => {\n  const {\n    newName, newNumber,\n    onChangeName, onChangeNumber, onAdd\n  } = props\n  \n  return (\n    <form>\n      <div>\n        Name: <input onChange={onChangeName} value={newName} />\n      </div>\n      <div>\n        Number: <input onChange={onChangeNumber} value={newNumber} />\n      </div>\n      <div>\n        <button type=\"submit\" onClick={onAdd}>Add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Person = ({ name, number, onDelete }) => (\n  <tr>\n    <td>{name}</td>\n    <td>{number}</td>\n    <td><button onClick={onDelete}>Delete</button></td>\n  </tr>\n)\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst PersonList = ({persons, nameFilter, onDelete}) => {\n  const filteredPersons = persons.filter(\n    person => person.name.toLowerCase().includes(nameFilter.toLowerCase())\n  )\n\n  return (\n    <table>\n      <tbody>\n        { filteredPersons.map(person =>\n          <Person\n            key={person.id}\n            name={person.name}\n            number={person.number}\n            onDelete={() =>{onDelete(person)}}\n          />\n        )}\n      </tbody>\n    </table>\n  )\n}\n\nexport default PersonList","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst update = (newObject, id) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, deletePerson, update }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport PersonForm from './components/PersonForm'\nimport PersonList from './components/PersonList'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [nameFilter, setNameFilter] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService.getAll().then(data => setPersons(data))\n  }, [])\n\n  const onAdd = (event) => {\n    event.preventDefault()\n    const newPerson = {name: newName, number: newNumber}\n    const existingPerson = persons.find(person => person.name === newName)\n    if (existingPerson) {\n      if (window.confirm(`${existingPerson.name} is already added to the phonebook, replace the old number with a new one?`)) {\n        personService\n        .update(newPerson, existingPerson.id).then(updatedPerson => {\n          setPersons(persons.map(person => person.id !== existingPerson.id ? person : updatedPerson))\n          setNotificationMessage(\n            `Updated ${newName}`\n          )\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setErrorMessage(\n            `Information of ${newName} has already been removed from the server`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n          setPersons(persons.filter(person => person.id !== existingPerson.id))\n        })\n      }\n    }\n    else {\n      personService.create(newPerson).then(newPersonWithId => {\n        setPersons(persons.concat(newPersonWithId))\n        setNotificationMessage(\n          `Added ${newName}`\n        )\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n      })\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const onChangeName = (event) => {\n    setNewName(event.target.value)\n  }\n  const onChangeNameFilter = (event) => {\n    setNameFilter(event.target.value)\n  }\n  const onChangeNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const onDelete = (personToDelete) => {\n    if (window.confirm(`Delete ${personToDelete.name}?`)) {\n      personService.deletePerson(personToDelete.id).then(\n        setPersons(persons.filter(person => person.id !== personToDelete.id))\n      )\n    }\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification type='error' message={errorMessage} />\n      <Notification type='success' message={notificationMessage} />\n      <Filter onChange={onChangeNameFilter} />\n      <h2>Add New</h2>\n      <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        onChangeName={onChangeName}\n        onChangeNumber={onChangeNumber}\n        onAdd={onAdd}\n      />\n      <h2>Numbers</h2>\n      <PersonList\n        persons={persons}\n        nameFilter={nameFilter}\n        onDelete={onDelete}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}